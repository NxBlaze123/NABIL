import tkinter as tk
from tkinter import ttk, messagebox
import mysql.connector

# GPA Calculation Function
def calculate_gpa(grades, credits):
    grade_points = {
        "A+": 4.00, "A": 4.00, "A-": 3.67,
        "B+": 3.33, "B": 3.00, "B-": 2.67,
        "C+": 2.33, "C": 2.00, "C-": 1.67,
        "D+": 1.33, "D": 1.00, "E": 0.67, "E-": 0.33, "F": 0.00
    }
    total_points = sum(grade_points[grade] * int(credit) for grade, credit in zip(grades, credits))
    total_credits = sum(map(int, credits))
    return round(total_points / total_credits, 2) if total_credits > 0 else 0

# Database Connection
def connect_db():
    return mysql.connector.connect(host="localhost", user="root", password="", database="pbt2gpa")

# Display Data
def display_details():
    matrix = matrix_entry.get()
    name = name_entry.get()
    diploma = diploma_combo.get()
    session = session_combo.get()
    
    courses = [course_combo1.get(), course_combo2.get(), course_combo3.get()]
    credits = [credit_combo1.get(), credit_combo2.get(), credit_combo3.get()]
    grades = [grade_combo1.get(), grade_combo2.get(), grade_combo3.get()]
    
    gpa = calculate_gpa(grades, credits)

    details_window = tk.Toplevel(root)
    details_window.title("User Input Details")
    
    tk.Label(details_window, text=f"Matrix Number: {matrix}").pack()
    tk.Label(details_window, text=f"Name: {name}").pack()
    tk.Label(details_window, text=f"Diploma: {diploma}").pack()
    tk.Label(details_window, text=f"Session: {session}").pack()
    for i, course in enumerate(courses):
        tk.Label(details_window, text=f"Course {i+1}: {course}, Credit: {credits[i]}, Grade: {grades[i]}").pack()
    tk.Label(details_window, text=f"GPA: {gpa:.2f}").pack()
    tk.Button(details_window, text="Close", command=details_window.destroy).pack()

# Save Data to Database
def save_to_db():
    matrix = matrix_entry.get()
    name = name_entry.get()
    diploma = diploma_combo.get()
    session = session_combo.get()
    
    courses = [course_combo1.get(), course_combo2.get(), course_combo3.get()]
    credits = [credit_combo1.get(), credit_combo2.get(), credit_combo3.get()]
    grades = [grade_combo1.get(), grade_combo2.get(), grade_combo3.get()]

    gpa = calculate_gpa(grades, credits)

    conn = connect_db()
    cursor = conn.cursor()
    
    try:
        cursor.execute("INSERT INTO gpatable (matrix_number, student_name, diploma, session, gpa) VALUES (%s, %s, %s, %s, %s)",
                       (matrix, name, diploma, session, gpa))
        conn.commit()
        messagebox.showinfo("Success", "Data saved successfully!")
    except mysql.connector.Error as err:
        messagebox.showerror("Error", f"Failed to save data: {err}")
    finally:
        cursor.close()
        conn.close()

# Clear All Entries
def clear_entries():
    matrix_entry.delete(0, tk.END)
    name_entry.delete(0, tk.END)
    diploma_combo.set("Select Diploma")
    session_combo.set("")
    for combo in [course_combo1, course_combo2, course_combo3, credit_combo1, credit_combo2, credit_combo3, grade_combo1, grade_combo2, grade_combo3]:
        combo.set("")

# Exit Program
def exit_program():
    if messagebox.askokcancel("Exit", "Are you sure you want to exit?"):
        root.destroy()

# Main Window
root = tk.Tk()
root.title("Grade Point Average System")
root.geometry("500x400")

# Title Label
tk.Label(root, text="~~ The GPA SYSTEM ~~", font=("Arial", 16, "bold")).grid(row=0, column=0, columnspan=4, pady=10)

# Student Details
tk.Label(root, text="Matrix Number:").grid(row=1, column=0, padx=5, pady=5, sticky="w")
matrix_entry = tk.Entry(root)
matrix_entry.grid(row=1, column=1)

tk.Label(root, text="Name:").grid(row=2, column=0, padx=5, pady=5, sticky="w")
name_entry = tk.Entry(root)
name_entry.grid(row=2, column=1)

tk.Label(root, text="Diploma:").grid(row=3, column=0, padx=5, pady=5, sticky="w")
diploma_combo = ttk.Combobox(root, values=["DDT", "DIT", "DMT"])
diploma_combo.grid(row=3, column=1)
diploma_combo.set("Select Diploma")

tk.Label(root, text="Session:").grid(row=4, column=0, padx=5, pady=5, sticky="w")
session_combo = ttk.Combobox(root, values=["Session I 2024/2025", "Session II 2024/2025"])
session_combo.grid(row=4, column=1)

# Course, Credit, and Grade Inputs
tk.Label(root, text="Course").grid(row=5, column=0)
tk.Label(root, text="Credit Hour").grid(row=5, column=1)
tk.Label(root, text="Grade").grid(row=5, column=2)

course_combo1 = ttk.Combobox(root, values=["P40203", "T40163", "S40212"])
course_combo1.grid(row=6, column=0)
credit_combo1 = ttk.Combobox(root, values=["1", "2", "3", "4"])
credit_combo1.grid(row=6, column=1)
grade_combo1 = ttk.Combobox(root, values=["A+", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "E", "E-", "F"])
grade_combo1.grid(row=6, column=2)

course_combo2 = ttk.Combobox(root, values=["P40203", "T40163", "S40212"])
course_combo2.grid(row=7, column=0)
credit_combo2 = ttk.Combobox(root, values=["1", "2", "3", "4"])
credit_combo2.grid(row=7, column=1)
grade_combo2 = ttk.Combobox(root, values=["A+", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "E", "E-", "F"])
grade_combo2.grid(row=7, column=2)

course_combo3 = ttk.Combobox(root, values=["P40203", "T40163", "S40212"])
course_combo3.grid(row=8, column=0)
credit_combo3 = ttk.Combobox(root, values=["1", "2", "3", "4"])
credit_combo3.grid(row=8, column=1)
grade_combo3 = ttk.Combobox(root, values=["A+", "A", "A-", "B+", "B", "B-", "C+", "C", "C-", "D+", "D", "E", "E-", "F"])
grade_combo3.grid(row=8, column=2)

# Buttons
tk.Button(root, text="Display", command=display_details).grid(row=9, column=0, pady=10)
tk.Button(root, text="Save", command=save_to_db).grid(row=9, column=1, pady=10)
tk.Button(root, text="Clear", command=clear_entries).grid(row=9, column=2, pady=10)
tk.Button(root, text="Exit", command=exit_program).grid(row=9, column=3, pady=10)

root.mainloop()
